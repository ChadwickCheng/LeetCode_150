/*
**什么是动态规划：**

动态规划（Dynamic Programming，简称 DP）是一种用于求解最优化问题的数学方法。它的基本思想是将一个复杂的问题分解成一系列简单的子问题（这称为问题的“状态”），然后将子问题的解存储起来，以便之后可以重复使用，从而提高效率。

**为什么使用动态规划：**

动态规划适用于具有“重叠子问题”和“最优子结构”特性的问题。

- 重叠子问题：在计算过程中，一些子问题会被多次计算。通过将子问题的解存储起来，可以避免重复计算，从而提高效率。

- 最优子结构：一个问题的最优解可以由其子问题的最优解构造出来。这意味着我们可以通过解决子问题来解决原问题。

**怎么用动态规划：**

使用动态规划的基本步骤如下：

1. **定义状态**：将原问题分解成一系列子问题，每个子问题对应一个状态。

2. **找出状态转移方程**：找出如何从一个状态转移到另一个状态的规则。这通常需要一些数学和逻辑技巧。

3. **初始化状态**：确定一些初始状态的值。

4. **按顺序计算状态**：根据状态转移方程，按照某种顺序计算所有的状态。

5. **返回最终结果**：根据计算的状态，返回原问题的解。

动态规划是一种非常强大的算法，它可以用于解决许多最优化问题，如最短路径问题、最长公共子序列问题、背包问题等。然而，动态规划也有一定的复杂性，需要一些时间和实践来掌握。
*/