/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
  if(n===1) return 1;
  let dp = new Array(n+1);
  dp[1] = 1;
  dp[2] = 2;
  for(let i=3;i<=n;i++) dp[i] = dp[i-1]+dp[i-2];
  return dp[n];
};
/*
动态规划通常包含以下四个步骤：

1. **定义状态**：在这个问题中，状态是到达每一级台阶的方法数量。

2. **定义状态转移方程**：在这个问题中，状态转移方程是 `dp[i] = dp[i - 1] + dp[i - 2]`，表示到达第 i 级台阶的方法数量等于到达第 i-1 级台阶和第 i-2 级台阶的方法数量之和。

3. **定义初始状态**：在这个问题中，初始状态是 `dp[1] = 1` 和 `dp[2] = 2`，表示到达第一级和第二级台阶的方法数量。

4. **计算结果**：在这个问题中，结果是 `dp[n]`，表示到达第 n 级台阶的方法数量。
*/